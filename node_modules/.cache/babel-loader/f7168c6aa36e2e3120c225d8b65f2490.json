{"ast":null,"code":"import _classCallCheck from\"/home/leandro/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/leandro/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/leandro/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/leandro/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/leandro/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";var ErrorBoundary=/*#__PURE__*/function(_Component){_inherits(ErrorBoundary,_Component);function ErrorBoundary(props){var _this;_classCallCheck(this,ErrorBoundary);_this=_possibleConstructorReturn(this,_getPrototypeOf(ErrorBoundary).call(this,props));_this.state={hasError:false};return _this;}_createClass(ErrorBoundary,[{key:\"componentDidCatch\",value:function componentDidCatch(error,info){this.setState({hasError:true});}},{key:\"render\",value:function render(){return this.state.hasError?React.createElement(\"h1\",null,\"Sorry, try again!\"):this.props.children;}}]);return ErrorBoundary;}(Component);export default ErrorBoundary;","map":{"version":3,"sources":["/home/leandro/Desktop/robofriends/src/components/ErrorBoundary.js"],"names":["React","Component","ErrorBoundary","props","state","hasError","error","info","setState","children"],"mappings":"klBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAEMC,CAAAA,a,uEACJ,uBAAYC,KAAZ,CAAmB,+CACjB,+EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CAAEC,QAAQ,CAAE,KAAZ,CAAb,CAFiB,aAGlB,C,sFACiBC,K,CAAOC,I,CAAM,CAC7B,KAAKC,QAAL,CAAc,CAAEH,QAAQ,CAAE,IAAZ,CAAd,EACD,C,uCACQ,CACP,MAAO,MAAKD,KAAL,CAAWC,QAAX,CACL,kDADK,CAGL,KAAKF,KAAL,CAAWM,QAHb,CAKD,C,2BAdyBR,S,EAiB5B,cAAeC,CAAAA,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n  render() {\n    return this.state.hasError ? (\n      <h1>Sorry, try again!</h1>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}